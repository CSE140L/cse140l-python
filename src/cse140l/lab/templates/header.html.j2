<style>
    /* UCSD-Inspired Color Palette */
    :root {
        --ucsd-blue-dark: #003865;
        --ucsd-blue-light: #B0E0E6;
        --status-success: #28A745; /* Green */
        --status-success-light: #DCF8E5; /* Very Light Green BG */
        --status-error: #DC3545; /* Red */
        --status-warning: #FFC107; /* Yellow */
        --ucsd-neutral-bg: #F0F8FF;
        --ucsd-code-bg: #E6E6FA;
    }

    /* Global and Status Styles */
    body {
        font-family: 'Arial', sans-serif;
        background-color: var(--ucsd-neutral-bg);
        color: var(--ucsd-blue-dark);
        padding: 20px;
    }
    h1 {
        background-color: var(--ucsd-blue-dark);
        color: var(--status-warning);
        padding: 15px;
        border-radius: 8px;
        text-align: center;
        margin-bottom: 30px;
    }
    h2 {
        color: var(--ucsd-blue-dark);
        border-bottom: 2px solid var(--ucsd-blue-light);
        padding-bottom: 5px;
        margin-top: 25px;
    }
    .file-status {
        padding: 20px;
        border-radius: 8px;
        margin-bottom: 30px;
    }

    /* --- SUCCESS STATE (GREEN) --- */
    .status-success {
        background-color: var(--status-success-light);
        border: 2px solid var(--status-success);
    }
    .status-success h2, .status-success p {
        color: var(--status-success);
        border-bottom: none;
    }
    /* ----------------------------- */

    /* Error State (Red) */
    .status-error {
        background-color: #F8D7DA;
        border: 2px solid var(--status-error);
    }
    .status-error h2, .status-error p {
        color: var(--status-error);
    }

    /* Code and List Styling (Retained) */
    code {
        background-color: var(--ucsd-code-bg);
        padding: 2px 4px;
        border-radius: 4px;
        color: var(--ucsd-blue-dark);
    }
    ul {
        list-style: none;
        padding-left: 0;
    }
    li {
        background-color: var(--ucsd-blue-light);
        margin-bottom: 5px;
        padding: 8px;
        border-left: 5px solid var(--ucsd-blue-dark);
        border-radius: 4px;
    }

    /* Circuit Screenshot Styling (Retained) */
    .circuit-container {
        padding: 15px;
        border: 1px solid var(--ucsd-blue-light);
        border-radius: 6px;
        margin-bottom: 20px;
        background-color: #FFFFFF;
    }
    .circuit-image img {
        width: 100%;
        max-width: 800px;
        height: auto;
        display: block;
        border: 1px dashed var(--ucsd-blue-light);
        padding: 10px;
    }

    /* Scrollbox Styles (Retained) */
    .scrollable-section {
        max-height: 600px;
        overflow-y: auto;
        padding: 10px;
        border: 1px solid var(--ucsd-blue-dark);
        border-radius: 8px;
        background-color: var(--ucsd-neutral-bg);
    }

    /* FROM error_table.html.j2 */
    /* General Styling */
    h3 {
        color: var(--ucsd-blue-dark);
        border-bottom: 2px solid var(--ucsd-blue-light);
        padding-bottom: 5px;
        margin-top: 25px;
    }
    h4 {
        color: var(--ucsd-blue-dark);
        margin-top: 20px;
    }

    /* Scrollbox for the entire traceback content (outer container) */
    .traceback-scrollbox-outer {
        max-height: 800px;
        overflow-y: auto;
        padding: 10px;
        border: 2px solid var(--ucsd-blue-dark);
        border-radius: 8px;
        background-color: #FFFFFF;
    }

    /* Scrollbox for EACH individual table */
    .table-scroll-container {
        /* Define horizontal scrolling for wide tables */
        overflow-x: auto;
        margin-bottom: 20px;
        border: 1px solid var(--ucsd-blue-light);
        border-radius: 4px;
        /* Define vertical scrolling for long tables (optional, adjust height as needed) */
        max-height: 400px;
        overflow-y: auto;
    }

    /* Table Styling */
    table {
        /* Ensures the table doesn't wrap content if it's wider than the container */
        width: 100%;
        min-width: max-content;
        border-collapse: collapse;
        font-family: monospace;
        font-size: 0.85em;
    }
    th, td {
        border: 1px solid #CCCCCC;
        padding: 5px 8px;
        text-align: center;
        white-space: nowrap; /* Prevent signal names/values from wrapping */
    }
    th {
        background-color: var(--ucsd-blue-dark);
        color: white;
        text-transform: uppercase;
        font-weight: bold;
        position: sticky;
        top: 0;
        z-index: 10;
    }

    /* Code styling for values */
    td code {
        padding: 0;
        background-color: transparent;
        color: var(--ucsd-blue-dark);
        /* Ensure code inside cells takes up all available space */
        display: block;
    }

    /* ------------------------------------------------ */
    /* HIGHLIGHTING STYLES */
    /* ------------------------------------------------ */

    /* Highlight the entire row that contains an error */
    .failing-row {
        /* Use a very light red background for the entire row */
        background-color: #F8D7DA;
        border-left: 5px solid var(--status-error);
    }

    /* Highlight the specific cell (entire <td>) with the error */
    .failing-cell {
        /* Solid Red background to clearly denote the failure */
        background-color: var(--status-error);
    }

    /* Style the text inside the failing cell (use white for contrast) */
    .failing-cell code {
        color: white;
        font-weight: bold;
    }
</style>

<h1>UCSD CSE 140L Lab {{lab_number}} Report</h1>

<div class="file-status {% if missing_files %}status-error{% else %}status-success{% endif %}">
    {% if missing_files %}
        <h2>Missing Files Detected:</h2>
        <p>We require the following file(s) for grading. Please check your submission and file names correctly!</p>
        <ul>
            {% for missing in missing_files %}
                <li>Missing File: <code>{{ missing }}.dig</code></li>
            {% endfor %}
        </ul>
    {% else %}
        <h2>All Required Files Submitted!</h2>
        <p>Proceeding to circuit analysis and grading.</p>
    {% endif %}
</div>

<div>
    <h2>Submitted Circuit Analysis:</h2>

    <div class="scrollable-section">
        {% for top_level, base64_png_data, analysis_errors in circuit_info %}
            <div class="circuit-container">
                <h3>Circuit File: <code>{{ top_level }}.dig</code></h3>

                <div class="circuit-image">
                    <p><strong>Screenshot of Circuit:</strong></p>
                    <img src="{{ base64_png_data }}" alt="Screenshot of {{ top_level }} Circuit" />
                </div>

                {% if analysis_errors %}
                    <div class="status-error" style="background-color: #F8D7DA; border-color: var(--status-error); padding: 10px;">
                        <h4>Circuit Analysis Errors: </h4>
                        <ul>
                            {% for error in analysis_errors %}
                                <li style="border-left: 5px solid var(--status-error); background-color: #FFF0F5;">
                                    Error in <code>{{ top_level }}</code>: {{ error }}
                                </li>
                            {% endfor %}
                        </ul>
                        <p style="color: var(--status-error); font-weight: bold;">Please fix these issues before resubmitting.</p>
                    </div>
                {% endif %}
            </div>
        {% endfor %}
    </div>
</div>

{% if all_failed_tests %}
<div class="traceback-scrollbox-outer">
    <h2>Testbench Tracebacks</h2>

    {% for test_run in all_failed_tests %}
        <h3>Failures in: {{ test_run.test_name }}</h3>

        {% for failed_test in test_run.failed_steps %}

            <h4>Failed Test Case: <code>{{ failed_test.name }}</code></h4>
            <p>
                All values are displayed in <strong>hexadecimal</strong>.
                Any wrong values are highlighted in red, where the format is <code>Expected/Found</code>.
            </p>

            <div class="table-scroll-container">
                <table>
                    <tr>
                        {% for signal in failed_test.signals %}
                            <th><code>{{ signal }}</code></th>
                        {% endfor %}
                    </tr>

                    {% for step in failed_test.steps %}

                        {# Check if ANY value in the step contains the failure delimiter '/' #}
                        {% set row_failed = false %}
                        {% for value in step.values() %}
                            {% if "/" in value %}
                                {% set row_failed = true %}
                            {% endif %}
                        {% endfor %}

                        {# Apply the failing-row class to the <tr> element if the row failed #}
                        <tr class="{% if row_failed %}failing-row{% endif %}">
                            {% for value in step.values() %}

                                {% set is_failing = "/" in value %}

                                {# Apply the failing-cell class to the <td> element #}
                                <td class="{% if is_failing %}failing-cell{% endif %}">
                                    <code>
                                    {% if is_failing %}
                                        {# Handle Expected/Found split and formatting for failure case #}
                                        {% set expected, found = value.split('/') %}
                                        {{ expected.replace("0x", "") }}/{{ found.replace("0x", "") }}
                                    {% else %}
                                        {# Standard value formatting #}
                                        {{ value.replace("0x", "") }}
                                    {% endif %}
                                    </code>
                                </td>
                            {% endfor %}
                        </tr>
                    {% endfor %}
                </table>
            </div>
        {% endfor %}
    {% endfor %}
</div>
{% endif %}
